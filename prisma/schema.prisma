// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id String @id @db.Uuid
    identities Identity[]
    profiles Profile[]
    outgoingEdges EdgedUser[] @relation("source_user_to_edges")
    incomingEdges EdgedUser[] @relation("target_user_to_edges")
    @@map("users")
}

model Identity {
    id Int @id @default(autoincrement())
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String @db.Uuid
    displayName String
    userName String @unique
    incomingEdges EdgedUser[]
    @@map("identities")
}

model Profile {
    id Int @id @default(autoincrement())
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String @db.Uuid
    title String
    content String
    @@map("profiles")
}

model EdgedUser {
    id Int @id @default(autoincrement())
    source User @relation("source_user_to_edges", fields: [sourceId], references: [id], onDelete: Cascade)
    sourceId String @db.Uuid
    targetUser User @relation(name: "target_user_to_edges", fields: [targetUserId], references: [id], onDelete: Cascade)
    targetUserId String @db.Uuid
    targetIdentity Identity @relation(fields: [targetIdentityId], references: [id], onDelete: Cascade)
    targetIdentityId Int
    createdAt DateTime @default(now()) @map("created_at")
    @@map("edged_identities")
    @@unique([sourceId, targetUserId])
}
